AUTOMAKE_OPTS		= gnu foreign

opbxlib_LTLIBRARIES	= libopbxsqlite3.la

libopbxsqlite3_la_SOURCES = src/alter.c src/analyze.c src/attach.c	\
src/auth.c src/btree.c src/btree.h src/build.c src/callback.c		\
src/complete.c src/date.c src/delete.c src/expr.c src/func.c		\
src/hash.c src/hash.h src/insert.c src/legacy.c src/main.c		\
src/os_unix.c src/os_win.c src/pager.c src/pager.h src/pragma.c		\
src/prepare.c src/printf.c src/random.c src/select.c src/shell.c	\
src/sqlite.h.in src/sqliteInt.h src/table.c src/tclsqlite.c		\
src/tokenize.c src/trigger.c src/utf.c src/update.c src/util.c		\
src/vacuum.c src/vdbe.c src/vdbe.h src/vdbeapi.c src/vdbeaux.c		\
src/vdbefifo.c src/vdbemem.c src/vdbeInt.h src/where.c src/btree.h	\
src/hash.h src/os.h src/os_common.h src/os_unix.h src/os_win.h		\
src/sqliteInt.h src/vdbe.h

nodist_libopbxsqlite3_la_SOURCES =  sqlite3.h opcodes.c opcodes.h parse.c parse.h 

libopbxsqlite3_la_CFLAGS  = $(AM_CFLAGS) @SQLITE3_THREADSAFE_CFLAGS@ -I$(srcdir)/src
libopbxsqlite3_la_LIBADD  = -lpthread
libopbxsqlite3_la_LDFLAGS = -no-undefined -version-info "8:6:8"

EXTRA_DIST = src/parse.y tool/lempar.c
BUILT_SOURCES = opcodes.c opcodes.h parse.c parse.h keywordhash.h sqlite3.h
CLEANFILES = parse.out parse.c parse.h opcodes.c opcodes.h keywordhash.h sqlite3.h

opcodes.c: opcodes.h mkopcodec.awk
	sort -n -b +2 opcodes.h | ${AWK} -f mkopcodec.awk > opcodes.c

opcodes.h: parse.h src/vdbe.c mkopcodeh.awk
	cat parse.h $(srcdir)/src/vdbe.c | ${AWK} -f mkopcodeh.awk > opcodes.h

lempar.c parse.c parse.h: parse.y tool/lempar.c lemon
	cp $(srcdir)/tool/lempar.c .
	cp $(srcdir)/src/parse.y .
	./lemon parse.y

parse.y: src/parse.y
	cp $(srcdir)/src/parse.y .

keywordhash.h: mkkeywordhash tool/mkkeywordhash.c
	./mkkeywordhash > keywordhash.h

sqlite3.h:  src/sqlite.h.in
	${SED} -e s/--VERS--/$(RELEASE)/ $(srcdir)/src/sqlite.h.in | \
	${SED} -e s/--VERSION-NUMBER--/$(VERSION_NUMBER)/ > sqlite3.h

noinst_PROGRAMS = lemon mkkeywordhash

lemon_SOURCES = tool/lemon.c

mkkeywordhash_SOURCES = tool/mkkeywordhash.c
