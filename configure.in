#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.


AC_PREREQ(2.59)

AC_PATH_PROG([GROUPADD], [groupadd])
AC_PATH_PROG([GREP], [grep])
AC_PATH_PROG([SVN], [svn])

OPBXRUNGROUP=openpbx
OPBXRUNUSER=openpbx
ASTLINK="-Wl,-E"
SOLINK="-shared -Xlinker -x"
VALGRIND="" #-DMAKE_VALGRIND_HAPPY
OPTIMIZECPU="no"
prefix=/opt/openpbx



### Optimize for host cpu version
AC_ARG_ENABLE(overwrite,     
 [  --enable-overwrite  overwrite your config with conf file samples],OVERWRITE=yes, )
 
if test "$OVERWRITE" = "yes" ; then 
	OVERWRITE="yes"
fi


### Optimize for host cpu version
AC_ARG_ENABLE(optimization,     
 [  --disable-optimization    no detection or tuning flags for cpu version],, OPTIMIZECPU=yes)
if test $OPTIMIZECPU = "yes" ; then 
	DEBUG="-g"
fi

profile=no
AC_ARG_ENABLE(profiling,
	[  --enable-profiling			enable compiling with profiling support],profile=yes,)
if test $profile = "yes" ; then
	DEBUG="-g -pg"
fi


low_memory=no
AC_ARG_ENABLE(low_memory,
	[  --enable-low_memory			enable low_memory support],low_memory=yes,)
if test $low_memory = "yes" ; then
	LOW_MEMORY="-DLOW_MEMORY"
fi

#SVN Revision number For version number
if test -n $SVN ; then
	SUBVERSION=`svn info | grep Revision | awk '{ print $2 }'`
fi

             
dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

# Checks for programs.
AC_PROG_CXX
AC_PROG_AWK
AC_PROG_YACC
AC_PROG_CC
AC_PROG_CPP
AC_PROG_LEX
AC_PROG_INSTALL
#AC_PROG_LN_S
#AC_PROG_MAKE_SET
#AC_PROG_RANLIB


# Checks for libraries.
AC_CHECK_LIB([asound], [main])
AC_CHECK_LIB([crypto], [main])
AC_CHECK_LIB([db], [main])
AC_CHECK_LIB([dl], [main])
AC_CHECK_LIB([expat], [main])
AC_CHECK_LIB([ib], [main])
AC_CHECK_LIB([kdeui], [main])
AC_CHECK_LIB([m], [main])
AC_CHECK_LIB([nbs], [main])
AC_CHECK_LIB([ncurses], [main])
AC_CHECK_LIB([newt], [main])
AC_CHECK_LIB([nsl], [main])
AC_CHECK_LIB([odbc], [main])
AC_CHECK_LIB([ossaudio], [main])
AC_CHECK_LIB([pri], [main])
AC_CHECK_LIB([pthread], [main])
AC_CHECK_LIB([sqlite], [main])
AC_CHECK_LIB([ssl], [main])
AC_CHECK_LIB([t], [main])

# Checks for header files.
AC_FUNC_ALLOCA
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([arpa/inet.h fcntl.h inttypes.h limits.h locale.h malloc.h netdb.h netinet/in.h stddef.h stdint.h stdlib.h string.h strings.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h syslog.h termios.h unistd.h utime.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_STDBOOL
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_CHECK_MEMBERS([struct stat.st_blksize])
AC_HEADER_TIME
AC_STRUCT_TM
AC_C_VOLATILE
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_CHOWN
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRCOLL
AC_FUNC_STRFTIME
AC_FUNC_STRNLEN
AC_FUNC_STRTOD
AC_FUNC_UTIME_NULL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([atexit bzero dup2 endpwent floor ftruncate getcwd gethostbyname gethostname gettimeofday inet_ntoa isascii localtime_r memchr memmove memset mkdir munmap pow putenv re_comp regcomp rint select setenv socket sqrt strcasecmp strchr strcspn strdup strerror strncasecmp strndup strrchr strspn strstr strtol utime])


if test "x${OPTIMIZECPU}" = "xyes"; then
		dnl Try to autodetect cpu type
		CPU_NAME="unknown"
		CPU_TYPE="unknown"
		if test -e "/proc/cpuinfo" ; then
			intel[[30]]="-march=i386"
			intel[[32]]="-march=i386"
			intel[[34]]="-march=i386"
			intel[[40]]="-march=i486"
			intel[[41]]="-march=i486"
			intel[[42]]="-march=i486"
			intel[[43]]="-march=i486"
			intel[[44]]="-march=i486"
			intel[[45]]="-march=i486"
			intel[[47]]="-march=i486"
			intel[[48]]="-march=i486"
			intel[[51]]="-march=pentium"
			intel[[52]]="-march=pentium"
			intel[[54]]="-march=pentium-mmx"
			intel[[61]]="-march=pentiumpro"
			intel[[63]]="-march=pentium2"
			intel[[65]]="-march=pentium2"
			intel[[66]]="-march=pentium2"
			intel[[67]]="-march=pentium3"
			intel[[68]]="-march=pentium3"
			intel[[610]]="-march=pentium3"
			intel[[611]]="-march=pentium3"
			intel[[150]]="-march=pentium4"
			intel[[151]]="-march=pentium4"
			intel[[152]]="-march=pentium4"
			amd[[50]]="-march=i586"
			amd[[51]]="-march=i586"
			amd[[52]]="-march=i586"
			amd[[53]]="-march=i586"
			amd[[56]]="-march=k6"
			amd[[57]]="-march=k6"
			amd[[58]]="-march=k6-2"
			amd[[59]]="-march=k6-3"
			amd[[61]]="-march=athlon"
			amd[[62]]="-march=athlon"
			amd[[63]]="-march=athlon"
			amd[[64]]="-march=athlon"
			amd[[66]]="-march=athlon"
			amd[[67]]="-march=athlon"
			amd[[68]]="-march=athlon"
			amd[[155]]="-march=athlon64"
			CPU_TYPE="known"
			CPU_FAMILY=`cat /proc/cpuinfo | grep "cpu family" | head -n1`
			CPU_MODEL=`cat /proc/cpuinfo | grep model[[^\ ]] | head -n1`
			CPU_NAME=`cat /proc/cpuinfo | grep "model name" | head -n1`
			CPU_FLAGS=`cat /proc/cpuinfo | grep "flags" | head -n1`
			CPU_VENDOR=`cat /proc/cpuinfo | grep "vendor_id" | head -n1`
			CPU_FAMILY=${CPU_FAMILY#*: }
			CPU_MODEL=${CPU_MODEL#*: }
			CPU_NAME=${CPU_NAME#*: }
			CPU_FLAGS=${CPU_FLAGS#*: }
			CPU_VENDOR=${CPU_VENDOR#*: }
			if test "x${CPU_VENDOR}" = "xGenuineIntel" ; then
				CPU_OPTIONS=${intel[[$CPU_FAMILY$CPU_MODEL]]}
			fi
			if test "x${CPU_VENDOR}" = "xAuthenticAMD" ; then
				CPU_OPTIONS=${amd[[$CPU_FAMILY$CPU_MODEL]]}
			fi
			if test "x${CPU_OPTIONS}" = "x" ; then
				CPU_TYPE="unknown"
			fi
			CPU_EXT=""
			for i in $CPU_FLAGS ; do
				case $i in
				fpu)
					CPU_FPU="-mfpmath=387"
					;;
				mmx)
					CPU_EXT="$CPU_EXT -mmmx"
					;;
				sse)
					CPU_FPU="-mfpmath=sse -msse"
					;;
				sse2)
					CPU_FPU="-mfpmath=sse -msse2"
					;;
				3dnow)
					CPU_EXT="$CPU_EXT -m3dnow"
					;;
				esac
			done
			CPU_OPTIONS="-O3 $CPU_OPTIONS $CPU_FPU $CPU_EXT"
		fi

else
	CPU_OPTIONS=""
fi


AC_SUBST(CPU_TYPE)
AC_SUBST(CPU_FAMILY)
AC_SUBST(CPU_MODEL)
AC_SUBST(CPU_NAME)
AC_SUBST(CPU_FLAGS)
AC_SUBST(CPU_VENDOR)
AC_SUBST(CPU_FAMILY)
AC_SUBST(CPU_MODEL)
AC_SUBST(CPU_NAME)
AC_SUBST(CPU_FLAGS)
AC_SUBST(CPU_VENDOR)
AC_SUBST(SVN)
AC_SUBST(GREP)
AC_SUBST(GROUPADD)
AC_SUBST(VALGRIND)
AC_SUBST(SOLINK)
AC_SUBST(ASTLINK)
AC_SUBST(CPU_OPTIONS)
AC_SUBST(all_debug)
AC_SUBST(DEBUG)
AC_SUBST(DEBUG_THREADS)
AC_SUBST(TRACE_FRAMES)
AC_SUBST(MALLOC_DEBUG)
AC_SUBST(OVERWRITE)
AC_SUBST(LOW_MEMORY)
AC_SUBST(OPBXRUNGROUP)
AC_SUBST(OPBXRUNUSER)


AC_CONFIG_FILES([Makefile
                 agi/Makefile
                 apps/Makefile
                 cdr/Makefile
                 channels/Makefile
                 codecs/Makefile
                 codecs/gsm/Makefile
                 codecs/ilbc/Makefile
                 codecs/lpc10/Makefile
                 db1-ast/Makefile
                 editline/Makefile
                 formats/Makefile
                 funcs/Makefile
                 pbx/Makefile
                 res/Makefile
                 sqlite/Makefile
                 stdtime/Makefile
                 utils/Makefile])
AC_OUTPUT
